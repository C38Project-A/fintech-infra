permissions:
  id-token: write
  contents: read

name: Destroy-Terraform-AWS-Infra-Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment Environment (dev, qa, uat, prod)"
        required: true
        default: "prod"
      region:
        description: "AWS Region"
        required: true
        default: "us-east-2"
      action:
        description: "Terraform action"
        required: true
        default: "destroy"
        options:
          - destroy
          - apply

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: false

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_ENV: ${{ github.event.inputs.environment }}
      AWS_REGION: ${{ github.event.inputs.region }}
      TF_DIR: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Verify working directory
        run: |
          echo "Using Terraform directory: $TF_DIR"
          ls -l $TF_DIR

      - name: Terraform Format Check
        working-directory: ${{ env.TF_DIR }}
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init -backend-config="key=${{ env.TF_ENV }}/terraform.tfstate"

      - name: Terraform Plan
        working-directory: ${{ env.TF_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform plan -lock=false

  approve:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
      - run: echo "Waiting for manual approval..."

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    needs: approve
    if: ${{ github.event.inputs.action == 'destroy' }}
    env:
      TF_ENV: ${{ github.event.inputs.environment }}
      AWS_REGION: ${{ github.event.inputs.region }}
      TF_DIR: ${{ github.event.inputs.environment }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init -backend-config="key=${{ env.TF_ENV }}/terraform.tfstate"

      - name: Terraform Destroy
        working-directory: ${{ env.TF_DIR }}
        run: terraform destroy -auto-approve -lock=false
