permissions:
  id-token: write
  contents: read

name: Terraform-AWS-Infra-Destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment Environment (dev, qa, uat, prod)"
        required: true
        default: "prod"
      region:
        description: "AWS Region"
        required: true
        default: "us-east-2"

concurrency:
  group: terraform-destroy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    env:
      TF_ENV: ${{ github.event.inputs.environment }}
      AWS_REGION: ${{ github.event.inputs.region }}
      TF_DIR: ${{ github.event.inputs.environment }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Verify working dir
        run: |
          echo "Looking in './${{ env.TF_DIR }}'"
          ls -l ./${{ env.TF_DIR }}

      - name: Terraform fmt
        working-directory: ${{ env.TF_DIR }}
        run: terraform fmt -check

      - name: Terraform init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init -backend-config="key=${{ env.TF_ENV }}/terraform.tfstate"

      - name: Terraform Plan (Destroy)
        working-directory: ${{ env.TF_DIR }}
        run: terraform plan -destroy -lock=false

      - name: Await Manual Confirmation
        run: echo "âœ… Confirm in UI before destroy runs."
        shell: bash

  destroy-apply:
    name: Execute Destroy
    runs-on: ubuntu-latest
    needs: destroy
    environment: ${{ github.event.inputs.environment }}
    env:
      TF_ENV: ${{ github.event.inputs.environment }}
      AWS_REGION: ${{ github.event.inputs.region }}
      TF_DIR: ${{ github.event.inputs.environment }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init -backend-config="key=${{ env.TF_ENV }}/terraform.tfstate"

      - name: Terraform Destroy
        working-directory: ${{ env.TF_DIR }}
        run: terraform destroy -auto-approve
